@mixin btn-primary {
  background: $primary;
  padding: 15px;
  width: 80%;
  color: hsl(0, 0%, 100%);
  margin: 10% 0;
  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background-color: rgba(255,255,255,0.4);
    transition: none;
  }
  &:hover:after {
    width: 120%;
    background-color: rgba(255,255,255,0);
    transition: all 0.6s ease;
  }
  @include media($medium) {
    @include flex(flex, center, center)
    width: auto;
    padding: 10px 80px;
  }
}

/* flex-box model mixin. Takes up to 4 arguments. Fourth is optional. If not used, falls back to default. Uses most common flex-box properties. Usage:
  @include flex(flex, center, flex-end, column);

  Result:

  el {
    display: flex;
    justify-content: center;
    align-items: flex-end;
    flex-direction column;
  }
*/

@mixin flex($display, $justify, $align, $dir:'row') {
  display: $display;
  -webkit-box-pack: $justify;
          justify-content: $justify;
  -webkit-box-align: $align;
          align-items: $align;
  @if ($dir != '') {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: $dir;
  }
}

/* Mixin for media queries. Has to have content to work. Usage:

  el {
    @include media(1200px) {
      background-color: red;
    }
  }
  Result:

  @media (min-width: 1200px) {
  el {
    background-color: red;
  }
*/

@mixin media($breakpoint) {
  @media (min-width: #{$breakpoint}) {
    @content;
  }
}
